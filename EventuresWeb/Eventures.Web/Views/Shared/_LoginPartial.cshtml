@using Microsoft.AspNetCore.Identity

@inject SignInManager<EventuresUser> SignInManager
@inject UserManager<EventuresUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
        <ul class="nav navbar-nav navbar-left eventures-bg-color">
            <li class="nav-item">
                <a asp-controller="Home" asp-action="Index" class="nav-link nav-link-dark">Home</a>
            </li>
            <li class="nav-item">
                <a asp-controller="Events" asp-action="All" class="nav-link nav-link-dark">All Events</a>
            </li>
            @if (this.User.IsInRole("Admin"))
            {
                <li class="nav-item">
                    <a asp-controller="Events" asp-action="Create" class="nav-link nav-link-dark">Create Event</a>
                </li>
            }
        </ul>
    <ul class="nav navbar-nav navbar-right">
        <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="navbar-right">
            <ul class="nav navbar-nav navbar-right">
                <li class="nav-item">
                    <button type="submit" class="btn btn-link navbar-btn navbar-link nav-link-dark">Logout</button>
                </li>
            </ul>
        </form>
    </ul>

}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li class="nav-item">
            <a asp-controller="Home" asp-action="Index" class="nav-link nav-link-dark">Home</a>
        </li>
    </ul>
    <ul class="nav navbar-nav navbar right">
        <li class="nav-item">
            <a asp-controller="Account" asp-action="Register" class="nav-link nav-link-dark">Register</a>
        </li>
        <li class="nav-item">
            <a asp-controller="Account" asp-action="Login" class="nav-link nav-link-dark">Login</a>
        </li>
    </ul>
}
